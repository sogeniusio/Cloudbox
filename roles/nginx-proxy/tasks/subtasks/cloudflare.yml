#########################################################################
# Title:         Nginx-Proxy: Cloudflare Tasks                          #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
# https://github.com/advertine/ansible-cloudflare-purge
- name: List Cloudflare Zones
  uri:
    url: 'https://api.cloudflare.com/client/v4/zones?name={{ user.domain }}'
    method: 'GET'
    headers:
      Content-Type: "application/json"
      X-Auth-Email: '{{ cloudflare.email }}'
      X-Auth-Key: '{{ cloudflare.api }}'
    return_content: yes
  register: cf_zones

- name: Set 'cloudflare_zone' Variable
  set_fact:
    cloudflare_zone: "{{ cf_zones.json.result[0].id }}"

- name: Purge Cloudflare Cache for '{{ user.domain }}'
  uri:
    url: 'https://api.cloudflare.com/client/v4/zones/{{ cloudflare_zone }}/purge_cache'
    method: 'POST'
    headers:
      X-Auth-Email: '{{ cloudflare.email }}'
      X-Auth-Key: '{{ cloudflare.api }}'
    body_format: json
    body: { purge_everything: true }
    status_code: 200
  register: cf_purge

- name: Print Result of Cloudflare Cache Purge
  debug:
    msg: "{{ ((cf_purge.json.success is defined) and (cf_purge.json.success))
    | ternary('Successfully','Unsuccessfully') }}
    purged Cloudflare cache for '{{ user.domain }}'."

- name: Create Cloudflare Page Rule for Lets Encrypt
  uri:
    url: 'https://api.cloudflare.com/client/v4/zones/{{ cloudflare_zone }}/pagerules'
    method: POST
    headers:
      X-Auth-Email: '{{ cloudflare.email }}'
      X-Auth-Key: '{{ cloudflare.api }}'
    body_format: json
    body:
      priority: 1
      status: active
      targets:
      - target: url
        constraint:
          operator: matches
          value: "*{{ user.domain }}/.well-known/*"
      actions:
      - id: ssl
        value: 'off'
    status_code: 200,400
  register: cf_page_rule

- name: Print result of Cloudflare Page Rule Creation
  debug:
    msg: "Successfully created Let's Encrypt Cloudflare page rule for '{{ user.domain }}'."
  when: (cf_page_rule.json.success is defined) and (cf_page_rule.json.success)
