#########################################################################
# Title:         Cloudbox: Plex Role                                    #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  cloudb0x/plex                                          #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare
  vars:
    subdomain: plex
  when: cloudflare_enabled

- name: "Create Plex directories"
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - "/opt/plex"
    - "/opt/plex/Library"
    - "/opt/plex/Library/Application Support"
    - "/opt/plex/Library/Application Support/Plex Media Server"
    - "/opt/plex/Library/Application Support/Plex Media Server/Plug-ins"
    - "/opt/plex/Library/Logs"
    - "/opt/plex/Library/Logs/Plex Media Server"
    - "{{ plex.transcodes }}/plex"

- name: "Stop and remove any existing container"
  docker_container:
    name: plex
    state: absent

- name: "Pull Plex Docker image"
  docker_image:
    name: "cloudb0x/plex:{{ plex.tag }}"

- name: "Check if '/dev/dri' exists"
  stat:
    path: "/dev/dri"
  register: dev_dri

- name: "Check if 'Preferences.xml' exists"
  stat:
    path: "/opt/plex/Library/Application Support/Plex Media Server/Preferences.xml"
  register: preferences_xml

- name: "'Preferences.xml' Tasks"
  block:

  - name: Get 'Preferences.xml' XML data
    xml:
      path: "/opt/plex/Library/Application Support/Plex Media Server/Preferences.xml"
      xpath: /Preferences
      content: attribute
    register: preferences_xml_resp
    ignore_errors: yes

  - name: "Remove 'Preferences.xml' if malformed"
    file:
      path: "/opt/plex/Library/Application Support/Plex Media Server/Preferences.xml"
      state: absent
    when: (preferences_xml_resp is failed)

  - name: Set 'transcoder_path_fix' variable
    set_fact:
      transcoder_path_fix: "{{ (preferences_xml_resp is succeeded) and
        (preferences_xml_resp.matches[0].Preferences.TranscoderTempDirectory is defined) and
        (preferences_xml_resp.matches[0].Preferences.TranscoderTempDirectory | trim == '/transcodes') }}"

  - name: "Fix 'TranscoderTempDirectory'"
    xml:
      path: "/opt/plex/Library/Application Support/Plex Media Server/Preferences.xml"
      xpath: /Preferences
      attribute: TranscoderTempDirectory
      value: "/transcode"
      state: present
    ignore_errors: yes
    when: (transcoder_path_fix)

  - name: Set 'plex_server_claimed' variable
    set_fact:
      plex_server_claimed: "{{ (preferences_xml_resp is succeeded) and
        (preferences_xml_resp.matches[0].Preferences.PlexOnlineToken is defined) and
        (preferences_xml_resp.matches[0].Preferences.PlexOnlineToken | trim | length > 0) }}"

  when:
    - (not continuous_integration)
    - (preferences_xml.stat.exists)

- name: Claim Plex Server
  import_tasks: subtasks/claim_server.yml
  when:
    - (not continuous_integration)
    - (not preferences_xml.stat.exists) or (preferences_xml.stat.exists and not plex_server_claimed)

- name: "Grab lazyman IP address"
  set_fact:
    lazyman_ip: "{{ ( lookup('dig', 'powersports.ml', '@8.8.8.8', 'qtype=A') | ipv4 ) | default(false,true) }}"

- name: "Set 'localhost_ip' variable"
  set_fact:
    localhost_ip: "127.0.0.1"

- name: "Set Plex host variables"
  set_fact:
    plex_default_hosts:
      "metric.plex.tv": "{{ localhost_ip }}"
      "metrics.plex.tv": "{{ localhost_ip }}"
      "analytics.plex.tv": "{{ localhost_ip }}"
    plex_custom_hosts:
      "mf.svc.nhl.com": "{{ lazyman_ip | ternary(lazyman_ip, omit) }}"
      "mlb-ws-mf.media.mlb.com": "{{ lazyman_ip | ternary(lazyman_ip, omit) }}"
      "playback.svcs.mlb.com": "{{ lazyman_ip | ternary(lazyman_ip, omit) }}"

- name: "Create and start container"
  docker_container:
    name: plex
    image: "cloudb0x/plex:{{ plex.tag }}"
    pull: yes
    published_ports:
      - "{{ (( plex.open_port | default(false,true)) | ternary('', '127.0.0.1:')) + '32400:32400/tcp' }}"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "33400:33400/tcp"
      - "33443:33443/tcp"
    env:
      PLEX_UID: "{{ uid }}"
      PLEX_GID: "{{ gid }}"
      PLEX_CLAIM: "{{ (plex_claim_code) | default(omit) }}"
      CHANGE_CONFIG_DIR_OWNERSHIP: false
      ADVERTISE_IP: "http://plex.{{ user.domain }}:80/,https://plex.{{ user.domain }}:443/"
      VIRTUAL_HOST: "plex.{{ user.domain }}"
      VIRTUAL_PORT: 32400
      LETSENCRYPT_HOST: "plex.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      HTTPS_METHOD: noredirect
      HEALTHCHECK_MOUNT: /mnt/unionfs
      NVIDIA_DRIVER_CAPABILITIES: "{{ 'compute,video,utility' if (gpu.nvidia) | default(false) else omit }}"
      NVIDIA_VISIBLE_DEVICES: "{{ 'all' if (gpu.nvidia) | default(false) else omit }}"
      TZ: "{{ tz }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/plex:/config"
      - "/opt/scripts:/scripts"
      - "/mnt/unionfs/Media:/data"
      - "/mnt:/mnt"
      - "/tmp:/tmp"
      - "/dev/shm:/dev/shm"
      - "{{ plex.transcodes }}/plex:/transcode"
    devices: "{{ '/dev/dri:/dev/dri' if (gpu.intel and dev_dri.stat.exists) | default(false) else omit }}"
    etc_hosts: "{{ (plex_default_hosts) | combine(plex_custom_hosts|default([])) }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - plex
    purge_networks: yes
    restart_policy: unless-stopped
    state: started

- name: "Wait 15 seconds"
  wait_for:
    timeout: 15

# Sometimes docker will set transcodes folder to root after a restore.
- name: "Ensure transcodes folder has the correct permissions"
  file:
    path: "{{ plex.transcodes }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    recurse: yes

- name: "Install Trakt.tv Plugin"
  import_role:
    name: trakttv-plugin

- name: "Install Sub-Zero Plugin"
  import_role:
    name: sub-zero-plugin

- name: "Install WebTools Plugin"
  import_role:
    name: webtools-plugin

- name: "Forced Automatic Quality Settings"
  import_tasks: "subtasks/settings/forced_quality.yml"
  tags: plex_forced_quality
  when: (not continuous_integration)

- name: "DB Cache Size Settings"
  import_tasks: "subtasks/settings/db_cache_size.yml"
  tags: plex_db_cache_size
  when: (not continuous_integration)
